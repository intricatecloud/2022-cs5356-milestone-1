<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../partials/head') %>
  <style>
    .sign-form {
      width: 400px;
    }
  </style>
</head>

<body>
  <header>
    <%- include('../partials/nav', { hideSignIn: true }) %>
  </header>

 <section class="container sign-form"> 
  <h1 class="title"> Sign In </h1>
  <form class="box" id="login-form">
    <div class="field">
      <label class="label">Email</label>
      <div class="control">
        <input class="input" name="login" type="email" placeholder="e.g. alex@example.com">
      </div>
    </div>
  
    <div class="field">
      <label class="label">Password</label>
      <div class="control">
        <input class="input" name="password" id="password" type="password" placeholder="********">
      </div>
    </div>
  
    <button class="button is-primary">Sign in</button>
    <div id="login-error">
    </div>
  </form>
  or <a href="/sign-up">click here to create a new account</a>
 </section>



</body>
<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-app-compat.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-auth-compat.js"></script>

<script>

  window.onload = () => {
    const firebaseConfig = {
      apiKey: "AIzaSyD2q5H0BQbTfZ9KI9HlhEt4in1v68UV8P0",
      authDomain: "ruffhouse-ba476.firebaseapp.com",
      projectId: "ruffhouse-ba476",
      storageBucket: "ruffhouse-ba476.appspot.com",
      messagingSenderId: "817332458736",
      appId: "1:817332458736:web:50f7e8fb5f7cd4be709e35",
      measurementId: "G-DWF4TB2ZJJ"
    };

    const app = firebase.initializeApp(firebaseConfig);

    app.auth().setPersistence(firebase.auth.Auth.Persistence.NONE);

    document
      .getElementById("login-form")
      .addEventListener("submit", (event) => {
        event.preventDefault();
        const login = event.target.login.value;
        const password = event.target.password.value;

        // CS5356 TODO #3
        // Sign in using the Firebase SDK for Web
        // Get the users ID token
        // Start a new session with the users ID token
        // Redirect the user to the /dashboard
        
        app.auth().signInWithEmailAndPassword(login, password)
        .then((userCredential) => {
          // Signed in 

          const user = userCredential.user;
          user.getIdToken().then((idToken) => {

            fetch('/sessionLogin', {
              method: 'POST',
              headers: { 'Content-Type' : 'application/json'},
              body: JSON.stringify({ idToken })
            }).then(() => {
              window.location.href = '/dashboard'
            })
          })
          // ...
        })
        .catch((error) => {
          const errorCode = error.code;
          const errorMessage = error.message;
          // ..
        });

        return false;
      });
  };
</script>

</html>