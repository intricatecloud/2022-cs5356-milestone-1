<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../partials/head') %>
</head>

<body>
  <header>
    <%- include('../partials/nav') %>
  </header>

  <div class="container">
    Sign Up for a new account or <a href="/sign-in">click here to sign in with an existing account</a>
    <form id="login-form">
      <label>Login</label>
      <input id="login" type="text" name="login" />
      <label>Password</label>
      <input type="password" name="password" />
      <button>Log in</button>
    </form>
    <div id="login-error" style="display: none;">
    </div>
    <a href="/dashboard">Dashboard</a>
  </div>
</body>

<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-app-compat.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-auth-compat.js"></script>

<script>

  window.onload = () => {
    console.log('Running onload')
    const firebaseConfig = {
      // CS5356 TODO #2
      // Copy your Firebase config here too
      apiKey: "AIzaSyDXQjgSLj7sgQyGGR5VTIvNvyb5yyv26og",
      authDomain: "startup-system-12b33.firebaseapp.com",
      projectId: "startup-system-12b33",
      storageBucket: "startup-system-12b33.appspot.com",
      messagingSenderId: "1075699411631",
      appId: "1:1075699411631:web:a78b87778819eb8104c25a",
      measurementId: "G-6FVETNB8KB"
    };

    const app = firebase.initializeApp(firebaseConfig);

    app.auth().setPersistence(firebase.auth.Auth.Persistence.NONE);

    document
      .getElementById("login-form")
      .addEventListener("submit", (event) => {
        event.preventDefault();
        const login = event.target.login.value;
        const password = event.target.password.value;

        // CS5356 TODO #3
        // Create a new user using the Firebase SDK for Web
        // Get the users ID token
        // Start a new session with the users ID token
        // Redirect the user to the /dashboard

        
        app.auth().createUserWithEmailAndPassword(login, password)
        .then((userCredential) => {
            const user = userCredential.user;

            user.getIdToken().then((idToken) => {
              fetch('/sessionLogin', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({idToken})
              }).then(() => {
                window.location.href = '/dashboard'
              })
            })
        })
       
         return false;
      });
  };
</script>

</html>