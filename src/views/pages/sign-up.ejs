<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../partials/head') %>
</head>

<body>
  <header>
    <%- include('../partials/nav') %>
  </header>

  <div class="container">
    Sign Up for a new account or <a href="/sign-in">click here to sign in with an existing account</a>
    <form id="login-form">
      <label>Login</label>
      <input id="login" type="text" name="login" />
      <label>Password</label>
      <input type="password" name="password" />
      <button>Log in</button>
    </form>
    <div id="login-error" style="display: none;">
    </div>
    <a href="/dashboard">Dashboard</a>
  </div>
</body>

<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-app-compat.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-auth-compat.js"></script>

<script>

  window.onload = () => {
    console.log('Running onload')
    const firebaseConfig = {
      // CS5356 TODO #2
      // Copy your Firebase config here too
      apiKey: "AIzaSyC3fSu_OwzBevx2wwTStnqADUb5O56GBzI",
      authDomain: "building-startup-systems-pa.firebaseapp.com",
      projectId: "building-startup-systems-pa",
      storageBucket: "building-startup-systems-pa.appspot.com",
      messagingSenderId: "606798052998",
      appId: "1:606798052998:web:59d1e1f7d8e5b35e5b1b07",
      measurementId: "G-M3EBEN9JWH"
    };

    const app = firebase.initializeApp(firebaseConfig);

    app.auth().setPersistence(firebase.auth.Auth.Persistence.NONE);

    document
      .getElementById("login-form")
      .addEventListener("submit", (event) => {
        event.preventDefault();
        const login = event.target.login.value;
        const password = event.target.password.value;

        // CS5356 TODO #3
        // Create a new user using the Firebase SDK for Web
        // Get the users ID token
        // Start a new session with the users ID token
        // Redirect the user to the /dashboard

        console.log(login, password)

        firebase
          .auth()
          .createUserWithEmailAndPassword(login, password)
          .then((userCredential) => {
            // Signed in 
            var user = userCredential.user;
            //console.log("user", user)
            return user.getIdToken()
          }).then((idToken) => {
            return fetch('/sessionLogin', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json'},
              body: JSON.stringify({idToken}) // add the users ID token here
          }).then(() => {
            window.location.assign("/dashboard");
          })
         })
          .catch((error) => {
            var errorCode = error.code;
            var errorMessage = error.message;
            // ..
          });
        return false;
      });
  };
</script>

</html>